{"task": "Implement a function named `xor8` which takes two 8-bit words and returns their bitwise XOR. Also provide a constant `zero8` equal to 0 (8-bit).", "task_id": 1, "test_setup_code": "", "test_list": ["assert cry.eval_f('xor8 0x00 0xFF').result() == BV(8,0xff)"], "challenge_test_list": []}
{"task": "Implement a function named `matrix` which takes no input and returns a 3 x 3 matrix of tuples. For the function use a nested comprehension to write an expression to produce a 3 Ã— 3 matrix (as a sequence of sequences), such that the ijth entry contains the value (i, j).", "task_id": 2, "test_setup_code": "", "test_list": ["assert cry.eval_f('matrix').result() == [[(0, 0), (0, 1), (0, 2)], [(1, 0), (1, 1), (1, 2)], [(2, 0), (2, 1), (2, 2)]]"], "challenge_test_list": []}
